Проект написан на стеке mern. 

Формат документа Mongo:
const INITFILMSDATA = {
	director: [{rewards: [], 
				name: '', 
				photo: ''} 
	],
	images: [''],
	_id: '',
	name: '',
	year: '',
	country: '',
	category: '',
	actors: [{rewards: [],
			  name: '', 
			  photo: ''}
	],
	poster: '',
	trailer: '',
};
Файлы картинок и фотографий хранятся на сервере.Структура каталога:
/_id				<= film's id
	/actors_img		<= actros[i].photo
	/director_img	<= director[i].photo
	/img			<= images
	/poster			<= poster

Реализовано:
На фронте SPA:
1. На главной странице два слайдера.
2. Переход на карточку фильма.
3. Авторизация и аутентификация. Access token хранится в LS, Refresh token в кукисах. Вывод ошибок в модальном окне.
4. Роли( юзер и админ)
5. На странице постеров ( список фильмов) динамическая подгрузка при прокрутке.
6. Смена темы.
7. Динамический поиск по всем данным
8. При авторизации админа доступ к пункту меню Admin. 
9. В меню Admin вывод зарегистрированных юзеров, удаление юзеров.
10. В меню Admin создание карточки нового фильма( инфо  режиссеры, актеры, их фото, постеры, ссылка на трейлер -ютуб, фото из фильмов).
	Отправка файлов с картинкам и фотографиями на сервер.
11. Редактирование данных о фильме с возможностью замены файлов на сервере, удаление данных о фильме с удалением всего каталога с файлами фильма.
12. При редактировании/создании карточки фильма работает превью выбраных для отправки файлов изображений и фотографий.

На бэке:
1. Работа с mongo. Колекции фильмов, юзеров, токенов.
2. Авторизация, валидация, аутентификация
3. Загрузка файлов на сервер. Удаление файлов.
4. Проверка валидности файлов на размер и тип.
5. Обработка ошибок.
